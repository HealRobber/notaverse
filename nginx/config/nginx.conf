# /etc/nginx/nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'Host="$host" Proto="$http_x_forwarded_proto"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    server_tokens off;

    # 업스트림(도커 네트워크의 서비스명 기준)
    upstream wordpress {
        server wordpress:80;
        keepalive 32;
    }
    upstream geminiapi {
        server geminiapi:32553;
        keepalive 16;
    }

    # 공통 프록시 설정
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # 1) CloudFront가 Host=www.notaverse.org 로 보내는 원본 요청을 '그대로' 서빙
    server {
        listen 80 default_server;
        server_name www.notaverse.org;

        # 업로드 등 필요시 조정
        client_max_body_size 64m;

        # ★ CloudFront 뒤이므로, 원본에선 항상 HTTPS로 인지시키기
        #   ($scheme 사용 금지: 원본-오리진은 HTTP라서 루프/다운그레이드 유발)
        proxy_set_header Host               $host;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Proto  https;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         $connection_upgrade;

        # 워드프레스 (루트)
        location / {
            proxy_pass http://wordpress;
        }

        # Gemini API 프록시
        location /gemini-api/ {
            proxy_pass http://geminiapi/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Connection "";

            client_max_body_size 10m;

            # CORS (같은 도메인이면 생략 가능하지만, 프록시/서브도메인/CloudFront 경유 시 유용)
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET,POST,PUT,DELETE,OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization,Content-Type" always;

            # Preflight 처리
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # React 정적 앱 (/usr/share/nginx/html/notamanager/*)
        location /notamanager/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /notamanager/index.html;
        }
    }

    # 2) DDNS로 직접 들어오면 공식 도메인으로 정규화
    server {
        listen 80;
        server_name notaverse.ddns.net;
        return 301 https://www.notaverse.org$request_uri;
    }

    # (선택) 그 외 호스트로 들어오면 차단 또는 www로 유도하고 싶다면
    # server {
    #     listen 80;
    #     server_name _;
    #     return 301 https://www.notaverse.org$request_uri;
    # }
}
